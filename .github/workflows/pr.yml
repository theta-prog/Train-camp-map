name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '22'

jobs:
  changed-files:
    name: Detect Changed Files
    runs-on: ubuntu-latest
    outputs:
      has-typescript: ${{ steps.changes.outputs.typescript }}
      has-tests: ${{ steps.changes.outputs.tests }}
      has-source: ${{ steps.changes.outputs.source }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            typescript:
              - '**/*.ts'
              - '**/*.tsx'
            tests:
              - '**/*.test.ts'
              - '**/*.test.tsx'
              - '**/__tests__/**'
            source:
              - 'src/**'
              - 'prisma/**'
              - 'package*.json'

  test-changed:
    name: Test Changed Files
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.has-source == 'true'
    
    env:
      NODE_ENV: test
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: test-api-key
      JWT_SECRET: test-jwt-secret-for-ci-only
      DATABASE_URL: "file:./test.db"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # 全履歴を取得（変更ファイル検出用）

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run tests for changed files
        run: |
          # 変更されたファイルに関連するテストを実行
          if git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(ts|tsx|js|jsx)$'; then
            npm run test:changed
          else
            echo "No relevant files changed, skipping tests"
          fi

  lint-pr:
    name: Lint PR Changes
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.has-typescript == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Lint changed files
        run: npm run lint

  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.has-source == 'true'
    
    env:
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: test-api-key
      JWT_SECRET: test-jwt-secret-for-ci-only
      DATABASE_URL: "file:./test.db"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build and analyze bundle
        run: |
          npm run build
          echo "## Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "Build completed successfully" >> $GITHUB_STEP_SUMMARY
          if [ -f ".next/static/chunks/*.js" ]; then
            echo "JavaScript chunks created:" >> $GITHUB_STEP_SUMMARY
            du -h .next/static/chunks/*.js | head -10 >> $GITHUB_STEP_SUMMARY
          fi
